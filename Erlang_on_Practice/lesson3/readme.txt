Чемпионат мира по хоккею со штангой
В чемпионате участвуют несколько команд. Каждая команда представлена кортежем:

{team, Name, Players}
Где Players -- это список игроков. Игрок представлен кортежем:

{player, Name, Age, Rating, Health}
В целом структура данных, описывающая чемпионат, выглядит так:

Championship = [
    {team, "Crazy Bulls",
        [{player, "Big Bull", 22, 545, 100},
         {player, "Small Bull", 18, 324, 95}]},
    {team, "Cool Horses",
        [{player, "Lazy Horse", 21, 423, 80},
         {player, "Sleepy Horse", 23, 101, 55}]}
]
Можно пользоваться примером такой структуры, который возвращается функцией champ:sample_champ/0.

Задание 1-е, собрать статистику по чемпионату
Нужно реализовать функцию champ_stat:get_stat/1, которая на вход принимает структуру данных, описывающую чемпионат и на выходе отдает кортеж:

{NumTeams, NumPlayers, AvgAge, AvgRating}
где

NumTeams -- число команд в чемпионате;
NumPlayers -- число игроков в чемпионате;
AvgAge -- средний возраст игрока;
AvgRating -- средний рейтинг игрока.
Например, для указанной выше структуры результат должен быть:

{2, 4, 21.0, 348.25}
Тест запускается так:

make test_1
Задание 2-е, убрать из чемпионата больных игроков
К несчастью, незадолго до чемпионата началась эпидемия крокодильего гриппа. Многие игроки серьезно заболели. Их здоровье (Health) стало меньше 50 единиц. Таких игроков нужно удалить из команд.

В результате может оказаться, что в команде осталось слишком мало игроков. Команды, где число игроков меньше 5, не допускаются к участию в чемпионате.

Реализовать функцию champ_filter:filter_sick_players/1, которая на вход принимает структуру данных, описывающую чемпионат, и на выходе отдает такую же структуру, но отфильтрованную согласно описанным правилам.

Тест запускается так:

make test_2
Задание 3-е, составить пары игроков
Один из элементов игры -- парные забеги. Две команды выставляют по одному своих лучших игроков. Они должны проехать наперегонки 3 раза от своих ворот до ворот противника со штангой на плечах. Затем команды выставляют по следующему игроку, и т.д. Разрешается троллить и бодать противника.

Капитан комманды решает, в какой очередности выставлять игроков. И это очень важное тактическое решение. Чтобы помочь капитану, нужно представить все возможные варианты составления пар.

Реализовать функцию champ_pairs:make_pairs/2, которая на вход принимает две структуры данных, описывающие команду, и возвращает все возможные комбинации пар игроков, такие что:

игроки должны быть из разных комманд;
сумма рейтингов пары игроков должна быть больше 600.
Вернуть нужно имена игроков, а не весь кортеж, представляющий игрока.

Например, для команд "Crazy Bulls" и "Cool Hourses" допустимой парой будет {"Big Bull", "Sleepy Hourse"}, а недопустимой парой будет {"Small Bull", "Sleepy Hourse"}.

make test_3
Общий тест для всего упражнения запускается так:

make test